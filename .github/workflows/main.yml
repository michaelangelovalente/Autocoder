name: Autocoder Bot Workflow

on: 
  issues:
    types: [opened, reopened, labeled]
env:
    ISSUE_TITLE: ${{ github.event.issue.title }}
    ISSUE_NUMBER: ${{ github.event.issue.number }}
    ISSUE_BODY: ${{ github.event.issue.body }}
    ISSUE_ASSIGNEES: ${{ join(github.event.issue.assignees.*.login, ', ') }}
    ISSUE_LABELS: ${{ join(github.event.issue.labels.*.name, ', ') }}

    REPO_NAME: ${{github.repository}}
    # ISSUE_NUM: ${{github.event.issue.number}}
    OPENAI_API_KEY: ${{secrets.OPENAI_KEY}}
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}


jobs:
  
  process_issue:
    runs-on: ubuntu-latest
    # timeout-minutes: 5
    if: contains(github.event.issue.labels.*.name, 'autocoder-bot')
    steps:
      - name: Checkout repository for Process Issue
        uses: actions/checkout@v4

      - name: Make script executable
        run: |
         chmod +x ./scripts/script.sh

      - name: Run the script 
        run: ./scripts/script.sh $

      - name: Validate issue information
        id: validate
        run: |
          # Fail if required information is missing
          if [ -z "$ISSUE_BODY" ]; then
            echo "Error: Issue body is empty"
            exit 1
          fi
          # Output issue information for logging
          echo "issue_number=${ISSUE_NUMBER}" >> $GITHUB_OUTPUT
          echo "has_required_label=${{ contains(env.ISSUE_LABELS, 'autocoder-bot') }}" >> $GITHUB_OUTPUT
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: autocoder-artifact
          # path: ./autocoder-bot/
          path: ./autocoder-artifact/
          if-no-files-found: error
      
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: autocoder-artifact
          path: ./autocoder-artifact/
      
      - name: List files recursively
        run: ls -R ./autocoder-artifact/

      - name: Configure Git  
        run: |
          git config --global user.name 'autocoder-bot'
          git config --global user.email 'actions@github.com'
      
      
      - name: Copy artifacts contents
        run: |
         # Copy artifacts
         cp -r ./autocoder-artifact/* .          
         # Delete autocoder artifact directory
         rm -rf ./autocoder-artifact

      - name: Create Pull Request   
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Pull request added generated code for issue #${{ env.ISSUE_NUMBER }}"
          title: "Autocoder: Generated Code Pull request from autocoder-bot for Issue #${{ env.ISSUE_NUMBER }}"
          body: "This PR contains autogenerated code based on the issue #${{ env.ISSUE_NUMBER }}"
          base: main
          branch: "autocoder-branch-${{ env.ISSUE_NUMBER }}"
          labels: |
            autocoder-bot

# TODO: Download artifact in a directory caleld 'autocoder-artifact'

        
  # commit_generated_code:
  #   needs: [process_issue]
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4

      # - name: Download artifact
      #   uses: actions/download-artifact@v4
      #   with: 
      #     name: autocoder-artifact
      #     path: ./autocoder-artifact/
      
      # - name: Configure Git
      # # TODO: replace with config --local
      #   run: |
      #     git config --local user.name 'autocoder-bot'
      #     git config --local user.email 'actions@github.com'
#          git config --global user.name 'autocoder-bot'
#          git config --global user.email 'actions@github.com'

      # - name: Create and checkout new branch
      #   run: |
      #     branch_name="autocoder-branch-${{ env.ISSUE_NUMBER }}"
      #     git checkout -b $branch_name
      
      # - name: Copy artifacts contents
      #   run: |
      #     # Copy artifacts
      #     cp -r ./autocoder-artifact autocoder-bot
      #     # Delete autocoder artifact dir
      #     rm -rf ./autocoder-artifact
      
      # - name: Commit and push changes
      #   run: |
      #     git add .
      #     git commit -m "Feat: add generated code for issue #${{ env.ISSUE_NUMBER }}"
      #     git push origin "autocoder-branch-${{ env.ISSUE_NUMBER }}"
      
      # - name: create_pull_request
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     commit-message: "Test Pull update after commit 'Generated Code'"
      #     base: main
      #     # branch: main 
           
         

  